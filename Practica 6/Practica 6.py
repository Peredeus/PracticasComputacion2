# -*- coding: utf-8 -*-
"""EXAMEN 2 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZprYByX9wCRuF2jXqd7CTjO2wTIQUh-u
"""

#АНДРЕ УРИЕЛ ПЕРЕДО НАВА(Andre PEREDO )
import numpy as np 
import math 
def func(xyz):
  x,y,z=xyz
  return[11*x-math.sin(y*z)-0.7,
         10.4*x**4-81*(y+0.1)**2+math.sin(z)+1.06,
         np.exp(-x**2*y)+3*y**2+43/3*z-7/3+3.14/3
         ]

def jacobian(xyz):
  x,y,z=xyz
  return[[11,-y*math.cos(y*z),0],
         [41.6*x**3,-162*(y+0.1),math.cos(z)],
         [-2*x*y*np.exp(-x**2*y),6*y,43/3]]

         
def newton_iter(func,x_init,jaco):
  max_iter=100
  epsilon=1e-10

  x_last=x_init
  for k in range (max_iter):
      J=np.array(jaco(x_last))
      F=np.array(func(x_last))
      delta=np.linalg.solve(J,-F)
      x_last=x_last+delta


      if np.linalg.norm(delta)<epsilon:
        print('converges en k=',k)
        break
  else:
      print('la solucion no es convergente ')
  return x_last

x_initguess=[1,2,1]

x_solution=newton_iter(func,x_initguess,jacobian)
print('El resultado es',x_solution)